[tool.poetry]
name = "aizynthfinder"
version = "3.7.0"
description = "Retrosynthetic route finding using neural network guided Monte-Carlo tree search"
authors = ["Molecular AI group <samuel.genheden@astrazeneca.com>"]
license = "MIT"
include = ["aizynthfinder/data/*.yml", "aizynthfinder/data/templates/*"]
readme = "README.md"
homepage = "https://github.com/MolecularAI/aizynthfinder/"
repository = "https://github.com/MolecularAI/aizynthfinder/"
documentation = "https://molecularai.github.io/aizynthfinder/"

[tool.pytest.ini_options]
mccabe-complexity = 9

[tool.pylint.'MESSAGES CONTROL']
max-line-length = 120
max-args = 7
max-attributes = 20
min-public-methods = 0
disable = "W3101, R0022, W1201, W1203, R0401, W0707, W0221, W0603, R0801, R1735, W1514, C0209, W0237, R1732, W0602, R0914, typecheck"

[tool.poetry.dependencies]
python = ">=3.8,<3.10"
ipywidgets = "^7.5.1"
jinja2 = "^3.0.0"
jupyter = "^1.0.0"
jupytext = "^1.3.3"
networkx = "^2.4"
deprecated = "^1.2.10"
pandas = "^1.0.0"
pillow = "^9.0.0"
requests = "^2.23.0"
rdchiral = "^1.0.0"
rdkit = "^2022.3.3"
tables = "^3.6.1"
tqdm = "^4.42.1"
onnxruntime = "^1.14.0"
tensorflow = {version = "^2.8.0", optional=true}
grpcio = {version = "^1.24.0", optional=true}
tensorflow-serving-api = {version = "^2.1.0", optional=true}
pymongo = {version = "^3.10.1", optional=true}
route-distances = {version = "^1.1.0", optional=true}
scipy = {version = "^1.0", optional=true}
matplotlib = {version = "^3.0.0", optional=true}
timeout-decorator = {version = "^0.5.0", optional=true}

[tool.poetry.dev-dependencies]
black = "^22.0.0"
invoke = "^1.5.0"
pytest = "^6.2.2"
pytest-black = "^0.3.12"
pytest-cov = "^2.11.0"
pytest-datadir = "^1.3.1"
pytest-mock = "^3.5.0"
pytest-mccabe = "^2.0.0"
sphinx = "^4.0.0"
mypy = "^1.0.0"
pylint = "^2.16.0"

[tool.poetry.extras]
all = ["pymongo", "route-distances", "scipy", "matplotlib", "timeout-decorator"]
tf = ["tensorflow", "grpcio", "tensorflow-serving-api"]

[tool.poetry.scripts]
aizynthapp = "aizynthfinder.interfaces.aizynthapp:main"
aizynthcli = "aizynthfinder.interfaces.aizynthcli:main"
cat_aizynth_output = "aizynthfinder.tools.cat_output:main"
download_public_data = "aizynthfinder.tools.download_public_data:main"
smiles2stock = "aizynthfinder.tools.make_stock:main"

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"